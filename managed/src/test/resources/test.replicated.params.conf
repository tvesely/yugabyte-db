# This file is similar to application.config embeded in replicated.yml
# This is used for testing generated replicated config meets
# expected config in replicated.expected.conf
# We have replaced following values. In future this param structure will be uncommented
# replicated.params {
#   appSecret="TOP_SECRET"
#   dbIpAddres ="1.2.3.4"
#   dbPass ="pgpass"
#   hostUrl = "https://myhost"
#   promIpAddres ="5.6.7.8"
#   ybAlertsEmail = "repl.alerts@yugabyte.com"
#   ybAlertsUsername = "alerts.username"
#   ybAlertsPassword = "alerts#pass%"
# }
include classpath("application.common.conf")

play.crypto.secret="TOP_SECRET"
play.i18n.langs = [ "en" ]
pidfile.path = "/dev/null"
play.evolutions.enabled = false
play.modules.enabled += "org.flywaydb.play.PlayModule"

db {
  default.host="1.2.3.4"
  default.username="postgres"
  default.password="pgpass"
  default.logStatements=true
  default.migration.initOnMigrate=true
  default.migration.auto=true
}
ebean {
  default = ["com.yugabyte.yw.models.*"]
}
play.filters {
  # CSRF config
  csrf {
    cookie {
      # If non null, the CSRF token will be placed in a cookie with this name
      name = "csrfCookie"
      # Whether the cookie should be set to secure
      secure = false
      # Whether the cookie should have the HTTP only flag set
      httpOnly = false
    }
    # Whether to bypass CSRF check if CORS check is satisfied
    bypassCorsTrustedOrigins = false
    header {
      # The name of the header to accept CSRF tokens from.
      name = "Csrf-Token"
    }
  }
  # CORS config
  cors {
    pathPrefixes = ["/"]
    allowedOrigins = ["https://myhost"]
    supportsCredentials=true
    allowedHttpMethods = ["GET", "POST", "PUT", "OPTIONS", "DELETE"]
    allowedHttpHeaders = ["Accept", "Origin", "Content-Type", "X-Auth-Token", "X-AUTH-YW-API-TOKEN",
     ${play.filters.csrf.header.name}]
  }
}

yb {
  devops.home = /opt/yugabyte/devops
  metrics.host="5.6.7.8"
  storage.path = /opt/yugabyte/yugaware/data
  docker.network = bridge
  seedData = false
  swamper.targetPath = /opt/yugabyte/prometheus/targets
  swamper.rulesPath = /opt/yugabyte/prometheus/rules
  multiTenant = false
  releases.path = "/opt/yugabyte/releases"
  docker.release = "/opt/yugabyte/release"
  thirdparty.packagePath = /opt/third-party
  helm.packagePath = "/opt/yugabyte/helm"
  health.check_interval_ms = 300000
  health.status_interval_ms = 43200000
  health.default_email = "repl.alerts@yugabyte.com"
}
