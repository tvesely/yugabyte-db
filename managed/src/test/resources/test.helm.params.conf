# Following values substituted for testing helm deployment:
# helm.params {
# localhostIpAddr = 127.0.0.1
# multiTenant = false
# helmPackage = "/opt/yugabyte/helm/yugabyte-latest.tgz"
# helmTimeout = 900
# health.email = helm.alerts@yugabyte.com
# health.username = alerts.helm.username
# health.password = "helm#$password%"
# hostUrl = "http://myhost"
# }
include classpath("application.common.conf")

play.crypto.secret=${APP_SECRET}
play.i18n.langs = [ "en" ]
pidfile.path = "/dev/null"
play.evolutions.enabled=false
play.modules.enabled += "org.flywaydb.play.PlayModule"
play.logger.includeConfigProperties=true
log.override.path = "/opt/yugaware_data/logs"

db {
  default.url="jdbc:postgresql://127.0.0.1:5432/"${POSTGRES_DB}
  default.driver=org.postgresql.Driver
  default.username=${POSTGRES_USER}
  default.password=${POSTGRES_PASSWORD}
  default.logStatements=true
  default.migration.initOnMigrate=true
  default.migration.auto=true
}
ebean {
  default = ["com.yugabyte.yw.models.*"]
}

yb {
  devops.home = /opt/yugabyte/devops
  metrics.url = "http://127.0.0.1:9090/api/v1"
  storage.path = /opt/yugaware_data
  docker.network = bridge
  seedData = false
  swamper.targetPath = /opt/swamper_targets
  swamper.rulesPath = /opt/swamper_rules
  multiTenant = false
  releases.path = "/opt/releases"
  docker.release = "/opt/yugabyte/release"
  # TODO(bogdan): need this extra level for installing from local...
  thirdparty.packagePath = /opt/third-party/third-party
  helm.packagePath = "/opt/yugabyte/helm"
  helm.timeout_secs = 900
  health.check_interval_ms = 300000
  health.status_interval_ms = 43200000
  health.default_email = "helm.alerts@yugabyte.com"
}

play.filters {
  # CSRF config
  csrf {
    cookie {
      # If non null, the CSRF token will be placed in a cookie with this name
      name = "csrfCookie"
      # Whether the cookie should be set to secure
      secure = false
      # Whether the cookie should have the HTTP only flag set
      httpOnly = false
    }
    # Whether to bypass CSRF check if CORS check is satisfied
    bypassCorsTrustedOrigins = false
    header {
      # The name of the header to accept CSRF tokens from.
      name = "Csrf-Token"
    }
  }
  # CORS config
  cors {
    pathPrefixes = ["/"]
    allowedOrigins = ["https://myhost"]
    # Server allows cookies/credentials to be sent with cross-origin requests
    supportsCredentials=true
    allowedHttpMethods = ["GET", "POST", "PUT", "OPTIONS", "DELETE"]
    allowedHttpHeaders = ["Accept", "Origin", "Content-Type", "X-Auth-Token", "X-AUTH-YW-API-TOKEN",
     ${play.filters.csrf.header.name}]
  }
}
