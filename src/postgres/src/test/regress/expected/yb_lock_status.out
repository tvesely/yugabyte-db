CREATE TABLE yb_lock_tests
(
    k1 int,
    k2 int,
    r1 int,
    r2 text,
    v1 text,
    v2 text,
    PRIMARY KEY((k1, k2) HASH, r1,r2)
) SPLIT INTO 2 TABLETS;
CREATE UNIQUE INDEX yb_lock_tests_v1_v2_key ON yb_lock_tests (k1,k2) SPLIT INTO 2 TABLETS;
CREATE FUNCTION is_between_now_and_clock_timestamp(input_time timestamptz)
RETURNS boolean
AS $$
BEGIN
  RETURN input_time >= now() AND input_time <= clock_timestamp();
END;
$$ LANGUAGE plpgsql;
CREATE
OR REPLACE FUNCTION run_yb_lock_status(input_relation oid, input_transaction_id uuid,
                                              OUT locktype text,
                                              OUT relation text, OUT mode text[], OUT granted boolean,
                                              OUT single_shard boolean, OUT valid_waitstart boolean,
                                              OUT valid_waitend boolean, OUT has_node boolean,
                                              OUT has_tablet_id boolean,
                                              OUT has_transaction_id boolean,
                                              OUT valid_subtransaction_id boolean, OUT is_explicit boolean,
                                              OUT hash_cols text[],
                                              OUT range_cols text[], OUT column_id integer, OUT is_full_pk boolean,
                                              OUT multiple_rows_locked boolean, OUT num_blocking int4)
    RETURNS SETOF record
AS
$$
BEGIN
    RETURN QUERY SELECT l.locktype,
                        l.relation::regclass::text,
                        l.mode,
                        l.granted,
                        l.single_shard,
                        is_between_now_and_clock_timestamp(l.waitstart)                 as valid_waitstart,
                        is_between_now_and_clock_timestamp(l.waitend)                   as valid_waitend,
                        CASE WHEN l.node IS NOT NULL THEN true ELSE false END           as has_node,
                        CASE WHEN l.tablet_id IS NOT NULL THEN true ELSE FALSE END      as has_tablet_id,
                        CASE WHEN l.transaction_id IS NOT NULL THEN true ELSE FALSE END as has_transaction_id,
                        (l.subtransaction_id > 0) as valid_subtransaction_id,
                        l.is_explicit,
                        l.hash_cols,
                        l.range_cols,
                        l.column_id,
                        l.is_full_pk,
                        l.multiple_rows_locked,
                        array_length(l.blocked_by, 1)
                 -- TODO: Add the relation arg when we support querying by relation
                 FROM yb_lock_status(null, input_transaction_id) l
                 WHERE l.relation = input_relation
                 ORDER BY l.relation::regclass::text, l.transaction_id, l.hash_cols NULLS FIRST,
                          l.range_cols NULLS FIRST;
END ;
$$ LANGUAGE plpgsql;
-- Basic queries
SELECT true FROM yb_lock_status(null, null);
 bool
------
(0 rows)

SELECT true FROM yb_lock_status('yb_lock_tests'::regclass, null);
 bool
------
(0 rows)

SELECT true FROM yb_lock_status('yb_lock_tests'::regclass::int4, null);
 bool
------
(0 rows)

SELECT true FROM yb_lock_status(null, 'bogus');
ERROR:  invalid input syntax for type uuid: "bogus"
LINE 1: SELECT true FROM yb_lock_status(null, 'bogus');
                                              ^
SELECT true FROM yb_lock_status(null, '10000000-2000-3000-1000-400000000000');
 bool
------
(0 rows)

SELECT true FROM yb_lock_status('yb_lock_tests'::regclass, '10000000-2000-3000-1000-400000000000');
 bool
------
(0 rows)

-- READ COMMITTED
-- Basic insert
BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;
INSERT INTO yb_lock_tests VALUES (1, 1, 1, 'one', 1, 1);
SELECT * FROM run_yb_lock_status('yb_lock_tests'::regclass, null);
 locktype |   relation    |            mode            | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols |  range_cols   | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+---------------+----------------------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+---------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1}           |           | f          | t                    |
 row      | yb_lock_tests | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1,"\"one\""} |           | t          | f                    |
(4 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests_v1_v2_key'::regclass, null);
 locktype |        relation         |            mode            | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+-------------------------+----------------------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |            |           | f          | t                    |
 keyrange | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       |            |           | f          | t                    |
 keyrange | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {1}        |           | f          | t                    |
 row      | yb_lock_tests_v1_v2_key | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {1,"null"} |           | t          | f                    |
(4 rows)

COMMIT;
BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;
INSERT INTO yb_lock_tests VALUES (2, 2, 2, 'two', 2, 2);
SELECT * FROM run_yb_lock_status('yb_lock_tests'::regclass, null);
 locktype |   relation    |            mode            | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols |  range_cols   | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+---------------+----------------------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+---------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {2,2}     |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {2,2}     | {2}           |           | f          | t                    |
 row      | yb_lock_tests | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {2,2}     | {2,"\"two\""} |           | t          | f                    |
(4 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests_v1_v2_key'::regclass, null);
 locktype |        relation         |            mode            | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+-------------------------+----------------------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |            |           | f          | t                    |
 keyrange | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {2}       |            |           | f          | t                    |
 keyrange | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {2}       | {2}        |           | f          | t                    |
 row      | yb_lock_tests_v1_v2_key | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {2}       | {2,"null"} |           | t          | f                    |
(4 rows)

COMMIT;
-- Basic Column Update
BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;
UPDATE yb_lock_tests SET v1 = 2 WHERE k1 = 1 AND k2 = 1;
SELECT * FROM run_yb_lock_status('yb_lock_tests'::regclass, null);
 locktype |   relation    |            mode            | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols |  range_cols   | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+---------------+----------------------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+---------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1}           |           | f          | t                    |
 row      | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1,"\"one\""} |           | t          | f                    |
 column   | yb_lock_tests | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1,"\"one\""} |        14 | t          | f                    |
(5 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests_v1_v2_key'::regclass, null);
 locktype | relation | mode | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+----------+------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
(0 rows)

ABORT;
-- Basic primary key update
BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;
UPDATE yb_lock_tests SET r1 = 2 WHERE k1 = 1 AND k2 = 1;
SELECT * FROM run_yb_lock_status('yb_lock_tests'::regclass, null);
 locktype |   relation    |            mode            | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols |  range_cols   | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+---------------+----------------------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+---------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1}           |           | f          | t                    |
 row      | yb_lock_tests | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1,"\"one\""} |           | t          | f                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {2}           |           | f          | t                    |
 row      | yb_lock_tests | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {2,"\"one\""} |           | t          | f                    |
(6 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests_v1_v2_key'::regclass, null);
 locktype |        relation         |            mode            | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+-------------------------+----------------------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |            |           | f          | t                    |
 relation | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |            |           | f          | t                    |
 keyrange | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       |            |           | f          | t                    |
 keyrange | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       |            |           | f          | t                    |
 keyrange | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {1}        |           | f          | t                    |
 keyrange | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {1}        |           | f          | t                    |
 row      | yb_lock_tests_v1_v2_key | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {1,"null"} |           | t          | f                    |
 row      | yb_lock_tests_v1_v2_key | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {1,"null"} |           | t          | f                    |
(8 rows)

ABORT;
BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;
UPDATE yb_lock_tests SET k2 = 2 WHERE k1 = 1 AND k2 = 1;
SELECT * FROM run_yb_lock_status('yb_lock_tests'::regclass, null);
 locktype |   relation    |            mode            | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols |  range_cols   | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+---------------+----------------------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+---------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1}           |           | f          | t                    |
 row      | yb_lock_tests | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1,"\"one\""} |           | t          | f                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,2}     |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,2}     | {1}           |           | f          | t                    |
 row      | yb_lock_tests | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,2}     | {1,"\"one\""} |           | t          | f                    |
(7 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests_v1_v2_key'::regclass, null);
 locktype |        relation         |            mode            | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+-------------------------+----------------------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |            |           | f          | t                    |
 keyrange | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       |            |           | f          | t                    |
 keyrange | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {1}        |           | f          | t                    |
 row      | yb_lock_tests_v1_v2_key | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {1,"null"} |           | t          | f                    |
 keyrange | yb_lock_tests_v1_v2_key | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {2}        |           | f          | t                    |
 row      | yb_lock_tests_v1_v2_key | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {2,"null"} |           | t          | f                    |
(6 rows)

ABORT;
-- SELECT FOR SHARE
BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;
SELECT * FROM yb_lock_tests FOR SHARE;
 k1 | k2 | r1 | r2  | v1 | v2
----+----+----+-----+----+----
  2 |  2 |  2 | two | 2  | 2
  1 |  1 |  1 | one | 1  | 1
(2 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests'::regclass, null);
 locktype |   relation    |     mode      | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols |  range_cols   | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+---------------+---------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+---------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 relation | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1}           |           | f          | t                    |
 row      | yb_lock_tests | {STRONG_READ} | t       | f            |                 | t             | t        | t             | t                  | t                       | t           | {1,1}     | {1,"\"one\""} |           | t          | f                    |
 keyrange | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {2,2}     |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {2,2}     | {2}           |           | f          | t                    |
 row      | yb_lock_tests | {STRONG_READ} | t       | f            |                 | t             | t        | t             | t                  | t                       | t           | {2,2}     | {2,"\"two\""} |           | t          | f                    |
(8 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests_v1_v2_key'::regclass, null);
 locktype | relation | mode | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+----------+------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
(0 rows)

COMMIT;
-- SELECT FOR KEY SHARE
BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;
SELECT * FROM yb_lock_tests FOR KEY SHARE;
 k1 | k2 | r1 | r2  | v1 | v2
----+----+----+-----+----+----
  2 |  2 |  2 | two | 2  | 2
  1 |  1 |  1 | one | 1  | 1
(2 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests'::regclass, null);
 locktype |   relation    |    mode     | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols |  range_cols   | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+---------------+-------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+---------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests |             | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 relation | yb_lock_tests |             | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 keyrange | yb_lock_tests |             | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     |               |           | f          | t                    |
 keyrange | yb_lock_tests |             | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1}           |           | f          | t                    |
 row      | yb_lock_tests | {WEAK_READ} | t       | f            |                 | t             | t        | t             | t                  | t                       | t           | {1,1}     | {1,"\"one\""} |           | t          | f                    |
 keyrange | yb_lock_tests |             | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {2,2}     |               |           | f          | t                    |
 keyrange | yb_lock_tests |             | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {2,2}     | {2}           |           | f          | t                    |
 row      | yb_lock_tests | {WEAK_READ} | t       | f            |                 | t             | t        | t             | t                  | t                       | t           | {2,2}     | {2,"\"two\""} |           | t          | f                    |
(8 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests_v1_v2_key'::regclass, null);
 locktype | relation | mode | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+----------+------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
(0 rows)

COMMIT;
-- SELECT FOR UPDATE
BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED;
SELECT * FROM yb_lock_tests FOR UPDATE;
 k1 | k2 | r1 | r2  | v1 | v2
----+----+----+-----+----+----
  2 |  2 |  2 | two | 2  | 2
  1 |  1 |  1 | one | 1  | 1
(2 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests'::regclass, null);
 locktype |   relation    |            mode            | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols |  range_cols   | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+---------------+----------------------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+---------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 relation | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1}           |           | f          | t                    |
 row      | yb_lock_tests | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | t           | {1,1}     | {1,"\"one\""} |           | t          | f                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {2,2}     |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {2,2}     | {2}           |           | f          | t                    |
 row      | yb_lock_tests | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | t           | {2,2}     | {2,"\"two\""} |           | t          | f                    |
(8 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests_v1_v2_key'::regclass, null);
 locktype | relation | mode | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+----------+------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
(0 rows)

ABORT;
-- SERIALIZABLE tests
BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;
SELECT * from yb_lock_tests;
 k1 | k2 | r1 | r2  | v1 | v2
----+----+----+-----+----+----
  2 |  2 |  2 | two | 2  | 2
  1 |  1 |  1 | one | 1  | 1
(2 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests'::regclass, null);
 locktype |   relation    |     mode      | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+---------------+---------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests | {STRONG_READ} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |            |           | f          | t                    |
 relation | yb_lock_tests | {STRONG_READ} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |            |           | f          | t                    |
(2 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests_v1_v2_key'::regclass, null);
 locktype | relation | mode | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+----------+------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
(0 rows)

COMMIT;
BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;
SELECT * from yb_lock_tests where k1 = 1;
 k1 | k2 | r1 | r2  | v1 | v2
----+----+----+-----+----+----
  1 |  1 |  1 | one | 1  | 1
(1 row)

SELECT * FROM run_yb_lock_status('yb_lock_tests'::regclass, null);
 locktype |   relation    |     mode      | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols |  range_cols   | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+---------------+---------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+---------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1}           |           | f          | t                    |
 row      | yb_lock_tests | {STRONG_READ} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1,"\"one\""} |           | t          | f                    |
(4 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests_v1_v2_key'::regclass, null);
 locktype |        relation         |     mode      | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+-------------------------+---------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests_v1_v2_key | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |            |           | f          | t                    |
 keyrange | yb_lock_tests_v1_v2_key | {STRONG_READ} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       |            |           | f          | t                    |
(2 rows)

COMMIT;
BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;
SELECT * from yb_lock_tests where k1 = 1 and k2 = 1;
 k1 | k2 | r1 | r2  | v1 | v2
----+----+----+-----+----+----
  1 |  1 |  1 | one | 1  | 1
(1 row)

SELECT * FROM run_yb_lock_status('yb_lock_tests'::regclass, null);
 locktype |   relation    |     mode      | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols |  range_cols   | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+---------------+---------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+---------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1}           |           | f          | t                    |
 row      | yb_lock_tests | {STRONG_READ} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1,"\"one\""} |           | t          | f                    |
(4 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests_v1_v2_key'::regclass, null);
 locktype |        relation         |     mode      | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+-------------------------+---------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests_v1_v2_key | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |            |           | f          | t                    |
 keyrange | yb_lock_tests_v1_v2_key | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       |            |           | f          | t                    |
 keyrange | yb_lock_tests_v1_v2_key | {STRONG_READ} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {1}        |           | f          | t                    |
(3 rows)

COMMIT;
BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;
SELECT * from yb_lock_tests where k1 = 1 and k2 = 1 and r1 = 1 and r2 = 'one';
 k1 | k2 | r1 | r2  | v1 | v2
----+----+----+-----+----+----
  1 |  1 |  1 | one | 1  | 1
(1 row)

SELECT * FROM run_yb_lock_status('yb_lock_tests'::regclass, null);
 locktype |   relation    |     mode      | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols |  range_cols   | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+---------------+---------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+---------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     |               |           | f          | t                    |
 keyrange | yb_lock_tests | {WEAK_READ}   | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1}           |           | f          | t                    |
 row      | yb_lock_tests | {STRONG_READ} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1,"\"one\""} |           | t          | f                    |
(4 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests_v1_v2_key'::regclass, null);
 locktype | relation | mode | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+----------+------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
(0 rows)

COMMIT;
-- Foreign key reference
CREATE TABLE fk_reference
(
    k1 int,
    k2 int,
    r1 int,
    r2 text,
    FOREIGN KEY (k1, k2, r1, r2) REFERENCES yb_lock_tests (k1, k2, r1, r2),
    PRIMARY KEY (k1, k2, r1, r2)
);
BEGIN;
INSERT INTO fk_reference VALUES(1,1,1,'one');
SELECT * FROM run_yb_lock_status('yb_lock_tests'::regclass, null);
 locktype |   relation    |    mode     | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols |  range_cols   | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+---------------+-------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+---------------+-----------+------------+----------------------+--------------
 relation | yb_lock_tests |             | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |               |           | f          | t                    |
 keyrange | yb_lock_tests |             | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     |               |           | f          | t                    |
 keyrange | yb_lock_tests |             | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1,1}     | {1}           |           | f          | t                    |
 row      | yb_lock_tests | {WEAK_READ} | t       | f            |                 | t             | t        | t             | t                  | t                       | t           | {1,1}     | {1,"\"one\""} |           | t          | f                    |
(4 rows)

SELECT * FROM run_yb_lock_status('fk_reference'::regclass, null);
 locktype |   relation   |            mode            | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols |   range_cols    | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+--------------+----------------------------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+-----------------+-----------+------------+----------------------+--------------
 relation | fk_reference | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           |           |                 |           | f          | t                    |
 keyrange | fk_reference | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       |                 |           | f          | t                    |
 keyrange | fk_reference | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {1}             |           | f          | t                    |
 keyrange | fk_reference | {WEAK_READ,WEAK_WRITE}     | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {1,1}           |           | f          | t                    |
 row      | fk_reference | {STRONG_READ,STRONG_WRITE} | t       | f            |                 | t             | t        | t             | t                  | t                       | f           | {1}       | {1,1,"\"one\""} |           | t          | f                    |
(5 rows)

SELECT * FROM run_yb_lock_status('yb_lock_tests_v1_v2_key'::regclass, null);
 locktype | relation | mode | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+----------+------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
(0 rows)

COMMIT;
-- When a number of rows are inserted
BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ;
INSERT INTO yb_lock_tests SELECT i, i, i, 'value', i, i from generate_series(10, 20) i;
-- yb_lock_status returns entries from all tablets in the table
-- TODO: Remove WHERE when we support the relation argument
SELECT COUNT(DISTINCT(tablet_id)) FROM yb_lock_status('yb_lock_tests'::regclass, null)
                                  WHERE relation = 'yb_lock_tests'::regclass;
 count
-------
     2
(1 row)

ABORT;
-- Should not see any values
SELECT * FROM run_yb_lock_status(null, null);
 locktype | relation | mode | granted | single_shard | valid_waitstart | valid_waitend | has_node | has_tablet_id | has_transaction_id | valid_subtransaction_id | is_explicit | hash_cols | range_cols | column_id | is_full_pk | multiple_rows_locked | num_blocking
----------+----------+------+---------+--------------+-----------------+---------------+----------+---------------+--------------------+-------------------------+-------------+-----------+------------+-----------+------------+----------------------+--------------
(0 rows)

-- TODO: File bug that mentions that querying on transaction ID adds an extra row
-- TODO: Add tests for yb_lock_status(NULL, <transaction ID>) after we can query on ID
-- TODO: Add tests for colocated table
